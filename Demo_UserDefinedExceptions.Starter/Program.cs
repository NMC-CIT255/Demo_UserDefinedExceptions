using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Demo_UserDefinedExceptions
{
    /// <summary>
    /// Demo of implementing user-defined exceptions generated by the model
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            //
            // declare variables and set initial state of all flags
            //
            int row, column;
            bool validMove = false;
            bool playingRound = true;

            //
            // initialize the game board
            //
            Gameboard myGameboard = new Gameboard();
            myGameboard.CurrentRoundState = Gameboard.GameboardState.PlayerOTurn;

            //
            // round loop
            //
            while (playingRound)
            {
                validMove = false;

                //
                // player move loop
                //
                while (!validMove)
                {
                    //
                    // display which player's turn it is
                    //
                    Console.WriteLine("Player: " + myGameboard.CurrentRoundState.ToString());

                    //
                    // get row and column values from player
                    // Note: no validation
                    //
                    Console.Write("Row:");
                    row = int.Parse(Console.ReadLine());
                    Console.Write("Column:");
                    column = int.Parse(Console.ReadLine());

                    //
                    // try to assign the player choice to the game board
                    //
                    try
                    {
                        myGameboard.SetPlayerPiece(new GameboardPosition(row, column), Gameboard.PlayerPiece.O);
                        validMove = true;
                    }
                    // The player has requested a position with the row and/or column value out of range
                    catch (PositionChoiceOutOfRangeException ex)
                    {
                        Console.WriteLine("I think you tried an illegal move!");

                        //
                        // display message from user-defined exception
                        //
                        Console.WriteLine(ex.Message);
                    }
                    // The player has requested a position that is already taken on the game board
                    catch (PositionChoiceTakenException ex)
                    {
                        Console.WriteLine("I think you tried an illegal move!");

                        //
                        // display message from user-defined exception
                        //
                        Console.WriteLine(ex.Message);
                    }
                }
            }
        }
    }
}
